package com.darksoldier1404.dlr.weapon.obj;

@SuppressWarnings("unused")
public interface WarDamageable {double getDefaultHealth();
double getDefaultHealthRecharge();
double getDefaultShield();
double getDefaultShieldRecharge();
double getDefaultArmor();
double getDefaultEnergy();
double getDefaultEnergyRecharge();
double getDefaultMovementSpeed();
double getDefaultAttackSpeed();
float getDefaultAbilityStrength();
float getDefaultAbilityRange();
float getDefaultAbilityEfficiency();
float getDefaultAbilityDuration();
double getDefaultImpactResistance();
double getDefaultPunctureResistance();
double getDefaultSlashResistance();
double getDefaultColdResistance();
double getDefaultElectricityResistance();
double getDefaultHeatResistance();
double getDefaultToxinResistance();
double getDefaultBlastResistance();
double getDefaultCorrosiveResistance();
double getDefaultGasResistance();
double getDefaultMagneticResistance();
double getDefaultRadiationResistance();
double getDefaultVirusResistance();
double getHealthPerLevel();
double getHealthRechargePerLevel();
double getShieldPerLevel();
double getShieldRechargePerLevel();
double getArmorPerLevel();
double getEnergyPerLevel();
double getEnergyRechargePerLevel();
double getMovementSpeedPerLevel();
double getAttackSpeedPerLevel();
float getAbilityStrengthPerLevel();
float getAbilityRangePerLevel();
float getAbilityEfficiencyPerLevel();
float getAbilityDurationPerLevel();
double getImpactResistancePerLevel();
double getPunctureResistancePerLevel();
double getSlashResistancePerLevel();
double getColdResistancePerLevel();
double getElectricityResistancePerLevel();
double getHeatResistancePerLevel();
double getToxinResistancePerLevel();
double getBlastResistancePerLevel();
double getCorrosiveResistancePerLevel();
double getGasResistancePerLevel();
double getMagneticResistancePerLevel();
double getRadiationResistancePerLevel();
double getVirusResistancePerLevel();
double getCurrentHealth();
double getCurrentHealthRecharge();
double getCurrentShield();
double getCurrentShieldRecharge();
double getCurrentArmor();
double getCurrentEnergy();
double getCurrentEnergyRecharge();
double getCurrentMovementSpeed();
double getCurrentAttackSpeed();
float getCurrentAbilityStrength();
float getCurrentAbilityRange();
float getCurrentAbilityEfficiency();
float getCurrentAbilityDuration();
double getCurrentImpactResistance();
double getCurrentPunctureResistance();
double getCurrentSlashResistance();
double getCurrentColdResistance();
double getCurrentElectricityResistance();
double getCurrentHeatResistance();
double getCurrentToxinResistance();
double getCurrentBlastResistance();
double getCurrentCorrosiveResistance();
double getCurrentGasResistance();
double getCurrentMagneticResistance();
double getCurrentRadiationResistance();
double getCurrentVirusResistance();
double getAdditionalHealth();
double getAdditionalHealthRecharge();
double getAdditionalShield();
double getAdditionalShieldRecharge();
double getAdditionalArmor();
double getAdditionalEnergy();
double getAdditionalEnergyRecharge();
double getAdditionalMovementSpeed();
double getAdditionalAttackSpeed();
float getAdditionalAbilityStrength();
float getAdditionalAbilityRange();
float getAdditionalAbilityEfficiency();
float getAdditionalAbilityDuration();
double getAdditionalImpactResistance();
double getAdditionalPunctureResistance();
double getAdditionalSlashResistance();
double getAdditionalColdResistance();
double getAdditionalElectricityResistance();
double getAdditionalHeatResistance();
double getAdditionalToxinResistance();
double getAdditionalBlastResistance();
double getAdditionalCorrosiveResistance();
double getAdditionalGasResistance();
double getAdditionalMagneticResistance();
double getAdditionalRadiationResistance();
double getAdditionalVirusResistance();
void setDefaultHealth(double defaultHealth);
void setDefaultHealthRecharge(double defaultHealthRecharge);
void setDefaultShield(double defaultShield);
void setDefaultShieldRecharge(double defaultShieldRecharge);
void setDefaultArmor(double defaultArmor);
void setDefaultEnergy(double defaultEnergy);
void setDefaultEnergyRecharge(double defaultEnergyRecharge);
void setDefaultMovementSpeed(double defaultMovementSpeed);
void setDefaultAttackSpeed(double defaultAttackSpeed);
void setDefaultAbilityStrength(float defaultAbilityStrength);
void setDefaultAbilityRange(float defaultAbilityRange);
void setDefaultAbilityEfficiency(float defaultAbilityEfficiency);
void setDefaultAbilityDuration(float defaultAbilityDuration);
void setDefaultImpactResistance(double defaultImpactResistance);
void setDefaultPunctureResistance(double defaultPunctureResistance);
void setDefaultSlashResistance(double defaultSlashResistance);
void setDefaultColdResistance(double defaultColdResistance);
void setDefaultElectricityResistance(double defaultElectricityResistance);
void setDefaultHeatResistance(double defaultHeatResistance);
void setDefaultToxinResistance(double defaultToxinResistance);
void setDefaultBlastResistance(double defaultBlastResistance);
void setDefaultCorrosiveResistance(double defaultCorrosiveResistance);
void setDefaultGasResistance(double defaultGasResistance);
void setDefaultMagneticResistance(double defaultMagneticResistance);
void setDefaultRadiationResistance(double defaultRadiationResistance);
void setDefaultVirusResistance(double defaultVirusResistance);
void setHealthPerLevel(double HealthPerLevel);
void setHealthRechargePerLevel(double HealthRechargePerLevel);
void setShieldPerLevel(double ShieldPerLevel);
void setShieldRechargePerLevel(double ShieldRechargePerLevel);
void setArmorPerLevel(double ArmorPerLevel);
void setEnergyPerLevel(double EnergyPerLevel);
void setEnergyRechargePerLevel(double EnergyRechargePerLevel);
void setMovementSpeedPerLevel(double MovementSpeedPerLevel);
void setAttackSpeedPerLevel(double AttackSpeedPerLevel);
void setAbilityStrengthPerLevel(float AbilityStrengthPerLevel);
void setAbilityRangePerLevel(float AbilityRangePerLevel);
void setAbilityEfficiencyPerLevel(float AbilityEfficiencyPerLevel);
void setAbilityDurationPerLevel(float AbilityDurationPerLevel);
void setImpactResistancePerLevel(double ImpactResistancePerLevel);
void setPunctureResistancePerLevel(double PunctureResistancePerLevel);
void setSlashResistancePerLevel(double SlashResistancePerLevel);
void setColdResistancePerLevel(double ColdResistancePerLevel);
void setElectricityResistancePerLevel(double ElectricityResistancePerLevel);
void setHeatResistancePerLevel(double HeatResistancePerLevel);
void setToxinResistancePerLevel(double ToxinResistancePerLevel);
void setBlastResistancePerLevel(double BlastResistancePerLevel);
void setCorrosiveResistancePerLevel(double CorrosiveResistancePerLevel);
void setGasResistancePerLevel(double GasResistancePerLevel);
void setMagneticResistancePerLevel(double MagneticResistancePerLevel);
void setRadiationResistancePerLevel(double RadiationResistancePerLevel);
void setVirusResistancePerLevel(double VirusResistancePerLevel);
void setCurrentHealth(double currentHealth);
void setCurrentHealthRecharge(double currentHealthRecharge);
void setCurrentShield(double currentShield);
void setCurrentShieldRecharge(double currentShieldRecharge);
void setCurrentArmor(double currentArmor);
void setCurrentEnergy(double currentEnergy);
void setCurrentEnergyRecharge(double currentEnergyRecharge);
void setCurrentMovementSpeed(double currentMovementSpeed);
void setCurrentAttackSpeed(double currentAttackSpeed);
void setCurrentAbilityStrength(float currentAbilityStrength);
void setCurrentAbilityRange(float currentAbilityRange);
void setCurrentAbilityEfficiency(float currentAbilityEfficiency);
void setCurrentAbilityDuration(float currentAbilityDuration);
void setCurrentImpactResistance(double currentImpactResistance);
void setCurrentPunctureResistance(double currentPunctureResistance);
void setCurrentSlashResistance(double currentSlashResistance);
void setCurrentColdResistance(double currentColdResistance);
void setCurrentElectricityResistance(double currentElectricityResistance);
void setCurrentHeatResistance(double currentHeatResistance);
void setCurrentToxinResistance(double currentToxinResistance);
void setCurrentBlastResistance(double currentBlastResistance);
void setCurrentCorrosiveResistance(double currentCorrosiveResistance);
void setCurrentGasResistance(double currentGasResistance);
void setCurrentMagneticResistance(double currentMagneticResistance);
void setCurrentRadiationResistance(double currentRadiationResistance);
void setCurrentVirusResistance(double currentVirusResistance);
void setAdditionalHealth(double additionalHealth);
void setAdditionalHealthRecharge(double additionalHealthRecharge);
void setAdditionalShield(double additionalShield);
void setAdditionalShieldRecharge(double additionalShieldRecharge);
void setAdditionalArmor(double additionalArmor);
void setAdditionalEnergy(double additionalEnergy);
void setAdditionalEnergyRecharge(double additionalEnergyRecharge);
void setAdditionalMovementSpeed(double additionalMovementSpeed);
void setAdditionalAttackSpeed(double additionalAttackSpeed);
void setAdditionalAbilityStrength(float additionalAbilityStrength);
void setAdditionalAbilityRange(float additionalAbilityRange);
void setAdditionalAbilityEfficiency(float additionalAbilityEfficiency);
void setAdditionalAbilityDuration(float additionalAbilityDuration);
void setAdditionalImpactResistance(double additionalImpactResistance);
void setAdditionalPunctureResistance(double additionalPunctureResistance);
void setAdditionalSlashResistance(double additionalSlashResistance);
void setAdditionalColdResistance(double additionalColdResistance);
void setAdditionalElectricityResistance(double additionalElectricityResistance);
void setAdditionalHeatResistance(double additionalHeatResistance);
void setAdditionalToxinResistance(double additionalToxinResistance);
void setAdditionalBlastResistance(double additionalBlastResistance);
void setAdditionalCorrosiveResistance(double additionalCorrosiveResistance);
void setAdditionalGasResistance(double additionalGasResistance);
void setAdditionalMagneticResistance(double additionalMagneticResistance);
void setAdditionalRadiationResistance(double additionalRadiationResistance);
void setAdditionalVirusResistance(double additionalVirusResistance);
}
